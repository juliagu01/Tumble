Tumble (a game by VanillaChip)
Authors: Amanda Xu, Andra Liu, Julia Gu
Revision: May 3, 2020

Introduction: 
  Meet Tumble, a bright yellow ball determined to bring color and life to his quiet, gray world. As he bounces his way through this heartwarming metroidvania in search of the White Orb of Color, he finds friends in the most unexpected of places. 

Instructions:
  Click the play button on the start screen to begin a new game. Use the left and right arrows to move and the up arrow to jump. All other controls will be revealed during gameplay. 

Features List:
  A. must-have:
    1. start screen - cover page with simple and intuitive design. Offers the option to start the game.
    2. detailed map - one large, muted map that guides players through the game. Often leaves players with limited directions of exploration to guide them towards the abilities and knowledge necessary to complete the game.
    3. working physics and collisions - traditional platformer-style physics and collisions. No detracting bugs or glitches.
    4. power-ups - each grants the player a previously unknown ability. The player cannot make meaningful progress without gaining these colorful items in an order laid out by the map.
    5. messages - moves the story forward. Used sparingly. Displayed when players find new power-ups. 
  B. want-to-have:
    1. sound - sets a quiet mood, with bright sound effects as contrast. Sound effects play when the player jumps, uses an ability, or finds a power-up. Provides a mute option on the start screen and during gameplay.
    2. save slots - saves the current state of the game at checkpoints to be reloaded at a later time. Allows for up to three separate slots. Colorful flags act as checkpoints during gameplay. 
    3. sprite animation - change to Tumble’s shape during gameplay. Can include breathing animation when player is at rest, bounce animations and particle systems during platform collisions, and a visual representation of power-ups as they are being used.
    4. parallax background - background that shifts as players move to different areas of the map. Adds a sense of perspective. 
    5. pause screen - simple screen that appears when player pauses the game. Provides the option to continue or exit the game. 
  C. stretch:
    1. complete post-game - a continuation of Tumble’s adventures, with all of his newfound abilities and a colored map.
    2. hidden areas - areas of the map for added exploration. Can include small puzzles or additional messages. 
    3. interactive credits - a colorful map made from the names in the game’s credits.

Class List:
  game
    Camera - represents the area of the map shown to players at a given moment
    Game - represents the combination of other classes to create the landscape and viewing for the entire game
    Item - the blueprint for all power-ups and the features they share
    MovableRectangle - objects that move within the game
    Platform - represents a platform that Tumble can interact with
    Player - represents Tumble, a physics object with platform collision
  gui
    Button - represents a circular solid button that can lead to other screens
    DrawingSurface - creates an area in the window onto which the game is drawn
    Main - creates a window containing an instance of the game
    Screen - represents the features all different screens share for the game
    ScreenSwitcher - stores the game’s current screen 
  items
    Leaf, Feather, Stick, Straw, Kite - represent power-ups
  screens
    StartScreen, GameScreen, PauseScreen - represent the different screens the user might use

Credits:
  Mr. Shelby's AnimationDemo and ScreenSwitching - basic class structures for Main, DrawingSurface, Player, MovableRectangle, Screen, ScreenSwitcher

Responsibilities:
  Amanda - screens, map, sound
  Andra - sprite animation, power-up animations, messages
  Julia - physics, items, story design